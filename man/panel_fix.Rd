% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCP-plot.R
\name{panel_fix}
\alias{panel_fix}
\title{Set the panel width/height of a plot object to a fixed value.}
\usage{
panel_fix(
  x = NULL,
  panel_index = NULL,
  respect = NULL,
  width = NULL,
  height = NULL,
  margin = 1,
  padding = 0,
  units = "in",
  raster = FALSE,
  dpi = 300,
  BPPARAM = BiocParallel::SerialParam(),
  return_grob = FALSE,
  bg_color = "white",
  save = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{A ggplot object, a grob object, or a combined plot made by patchwork or cowplot package.}

\item{panel_index}{Specify the panel to be fixed. If NULL, will fix all panels.}

\item{respect}{If a logical, this indicates whether row heights and column widths should respect each other.}

\item{width}{The width of the panel.}

\item{height}{The height of the panel.}

\item{margin}{Margins around the plot.}

\item{units}{The units in which \code{height}, \code{width} and \code{margin} are given. Can be \code{mm}, \code{cm}, \code{in}, etc. See \code{\link[grid]{unit}}.}

\item{raster}{Whether to rasterize the panel.}

\item{dpi}{Plot resolution.}

\item{BPPARAM}{An \code{\link[BiocParallel]{BiocParallelParam}} instance determining the parallel back-end to be used during building the object made by patchwork package.}

\item{return_grob}{If \code{TRUE} then return a grob object instead of a wrapped \code{patchwork} object.}

\item{bg_color}{Plot background color.}

\item{save}{NULL or the file name used to save the plot.}

\item{verbose}{Whether to print messages.}

\item{...}{}
}
\description{
The ggplot object, when stored, can only specify the height and width of the entire plot, not the panel.
The latter is obviously more important to control the final result of a plot.
This function can set the panel width/height of plot to a fixed value and rasterize it.
}
\examples{
library(ggplot2)
p <- ggplot(data = mtcars, aes(x = mpg, y = wt, colour = cyl)) +
  geom_point() +
  facet_wrap(~gear, nrow = 2)
# fix the size of panel
panel_fix(p, width = 5, height = 3, units = "cm")
# rasterize the panel
panel_fix(p, width = 5, height = 3, units = "cm", raster = TRUE, dpi = 30)

# panel_fix will build and render the plot when the input is a ggplot object.
# so after panel_fix, the size of the object will be changed.
object.size(p)
object.size(panel_fix(p, width = 5, height = 3, units = "cm"))

## save the plot with appropriate size
# p_fix <- panel_fix(p, width = 5, height = 3, units = "cm")
# plot_size <- attr(p_fix, "size")
# ggsave(
#   filename = "p_fix.png", plot = p_fix,
#   units = plot_size$units, width = plot_size$width, height = plot_size$height
# )
## or save the plot directly
# p_fix <- panel_fix(p, width = 5, height = 3, units = "cm", save = "p_fix.png")

# fix the panel of the plot combined by patchwork
data("pancreas_sub")
p1 <- CellDimPlot(pancreas_sub, "Phase", aspect.ratio = 1) # ggplot object
p2 <- FeatureDimPlot(pancreas_sub, "Ins1", aspect.ratio = 0.5) # ggplot object
p <- p1 / p2 # plot is combined by patchwork
# fix the panel size for each plot, the width will be calculated automatically based on aspect.ratio
panel_fix(p, height = 1)

# fix the panel of the plot combined by plot_grid
library(cowplot)
p1 <- CellDimPlot(pancreas_sub, c("Phase", "SubCellType"), label = TRUE) # plot is combined by patchwork
p2 <- FeatureDimPlot(pancreas_sub, c("Ins1", "Gcg"), label = TRUE) # plot is combined by patchwork
p <- plot_grid(p1, p2, nrow = 2) # plot is combined by plot_grid
# fix the size of panel for each plot
panel_fix(p, height = 1)
# rasterize the panel while keeping all labels and text in vector format
panel_fix(p, height = 1, raster = TRUE, dpi = 30)

# fix the panel of the heatmap
ht1 <- GroupHeatmap(pancreas_sub,
  features = c(
    "Sox9", "Anxa2", "Bicc1", # Ductal
    "Neurog3", "Hes6", # EPs
    "Fev", "Neurod1", # Pre-endocrine
    "Rbp4", "Pyy", # Endocrine
    "Ins1", "Gcg", "Sst", "Ghrl" # Beta, Alpha, Delta, Epsilon
  ),
  group.by = c("CellType", "SubCellType"),
  show_row_names = TRUE
)
# the size of the heatmap is not fixed and can be resized by zooming the viewport.
ht1$plot
# fix the size of the heatmap according the current viewport
panel_fix(ht1$plot)
# rasterize the heatmap body
panel_fix(ht1$plot, raster = TRUE, dpi = 30)
# fix the size of overall heatmap including annotation and legend
panel_fix(ht1$plot, height = 4, width = 6)

ht2 <- GroupHeatmap(pancreas_sub,
  features = pancreas_sub[["RNA"]]@var.features,
  group.by = "SubCellType",
  n_split = 5, nlabel = 20,
  db = "GO_BP", species = "Mus_musculus", anno_terms = TRUE,
  height = 4, width = 1 # Heatmap body size for two groups
)
# the size of the heatmap is already fixed
ht2$plot
# when no height/width is specified, panel_fix does not change the size of the heatmap.
panel_fix(ht2$plot)
# rasterize the heatmap body
panel_fix(ht2$plot, raster = TRUE, dpi = 30)
# however, gene labels on the left and enrichment annotations on the right cannot be adjusted
panel_fix(ht2$plot, height = 5, width = 10)

}
